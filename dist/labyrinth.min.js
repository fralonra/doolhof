!function(t){"function"==typeof define&&define.amd?define(t):t()}(function(){"use strict";const t=require("chalk"),n=0,e="+";function o(t,n,e){const{x:o,y:s}=n,i=[];return t[o]&&t[o][s-e]&&i.push(t[o][s-e]),t[o-e]&&t[o-e][s]&&i.push(t[o-e][s]),t[o]&&t[o][s+e]&&i.push(t[o][s+e]),t[o+e]&&t[o+e][s]&&i.push(t[o+e][s]),i}function s(t){return Math.floor(Math.random()*t)}new class{constructor(t){const n={generate:!0,row:5,col:5,start:[0,0]};n.end=[n.row-1,n.col-1],this.options={...n,...t},this.options.generate&&this.generate()}generate(){const{row:i,col:r}=this.options;!function(n,o){console.time("gen-maze");const{row:i,col:r,start:c,end:l}=o,h=[];function u(t,o){return h.findIndex(n=>["x","y"].every(e=>t[e]===n[e]))<0&&(t.visited=!0,h.push(t)),o&&(n[(t.x+o.x)/2][(t.y+o.y)/2].type=e),o}const f=i*r;let a=n[2*c[0]+1][2*c[1]+1];for(;h.length<f;){const t=a.path;let n;const o=t.filter(t=>!t.visited);if(o.length)n=o[s(o.length)];else{const o=a.wall.filter(t=>t.type===e);o.length||(n=t[s(t.length)])}a=u(a,n)||h[s(h.length)]}console.timeEnd("gen-maze"),n.forEach(n=>{console.log(n.map(n=>n.type===e?t.green(n.visited?"v":"n"):n.type).join(" "))})}(function(t,s){const i=[];for(let o=0;o<2*s+1;++o){const s=[];for(let i=0;i<2*t+1;++i){const t={x:o,y:i};o%2==1&&i%2==1?(t.type=e,t.visited=!1):t.type=n,s.push(t)}i.push(s)}return i.forEach(t=>t.forEach(t=>{t.path=function(t,n){return o(t,n,2)}(i,t),t.wall=function(t,n){return o(t,n,1)}(i,t)})),i}(i,r),this.options)}}});
